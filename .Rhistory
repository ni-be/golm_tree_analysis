plot(las, color = "ScanAngleRank", bg = "white", axis = TRUE, legend = TRUE)
las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las")
plot(las, color = "ScanAngleRank", bg = "white", axis = TRUE, legend = TRUE)
source("~/PROJECTS/golm_tree_analysis/src/tree_count/tree_count.r")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
#USE FORESTTOOLS TO COUNT TREES
library(ForestTools)
library(lidR)
library(raster)
plot(cars)
library(ForestTools)
library(raster)
library(lidR)
library(lidR)
library(raster)
library(ForestTools)
las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las")
plot(las, color = "ScanAngleRank", bg = "white", axis = TRUE, legend = TRUE)
library(lidR)
library(raster)
library(ForestTools)
library(ggplot2)
plot(las, color = "ScanAngleRank", bg = "white", axis = TRUE, legend = TRUE)
source("~/PROJECTS/golm_tree_analysis/src/analysis.Rmd")
ggplot2::ggplot2(las, color = "ScanAngleRank", bg = "white", axis = TRUE, legend = TRUE)
ggplot2(las, color = "ScanAngleRank", bg = "white", axis = TRUE, legend = TRUE)
ggplot(las, color = "ScanAngleRank", bg = "white", axis = TRUE, legend = TRUE)
plot(las, color = "ScanAngleRank", bg = "white", axis = TRUE, legend = TRUE)
source("~/PROJECTS/golm_tree_analysis/src/analysis.Rmd")
library(lidR)
library(raster)
library(ForestTools)
las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las")
las <- segment_trees(las, li2012())
col <- random.colors(200)
plot(las, color = "treeID", colorPalette = col)
data(las)
las <- segment_trees(las, li2012())
col <- random.colors(200)
data(las)
# Remove plot margins (optional)
par(mar = rep(0.5, 4))
# Plot CHM (extra optional arguments remove labels and tick marks from the plot)
plot(las, xlab = "", ylab = "", xaxt='n', yaxt = 'n')
# Remove plot margins (optional)
par(mar = rep(0.5, 4))
# Plot CHM (extra optional arguments remove labels and tick marks from the plot)
plot(las, xlab = "", ylab = "", xaxt='n', yaxt = 'n')
plot(las, color = "treeID", colorPalette = col)
plot(las, color = "treeID", pal = col)
plot(las, color = "treeID", pal = "auto")
plot(las, color = "treeID", pal = "auto")
source("~/PROJECTS/golm_tree_analysis/src/analysis.Rmd")
library(lidR)
library(raster)
library(ForestTools)
las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las")
# Default algorithm for reading .las
las_alg = "p2r"
if(length(args) > 0) {
las_alg = args[0]
switch(las_alg,
"pitfree" = {
### pitfree
thr <- c(0,2,5,10,15)
edg <- c(0, 1.5)
chm <- rasterize_canopy(las, 1, pitfree(thr, edg), pkg = "raster")
},
"p2r" = {
### p2r
chm <- rasterize_canopy(las, 1, p2r(0.2), pkg = "raster")
},
"dsmtin" = {
### dsmtin
chm <- rasterize_canopy(las, 1, dsmtin(), pkg = "raster")
},
stop("Error: LAS Algorithm not selected!")
)
chm
kootenayCHM
library(lidR)
library(raster)
library(ForestTools)
las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las")
# Default algorithm for reading .las
las_alg = "p2r"
if(length(args) > 0) {
las_alg = args[0]
switch(las_alg,
"pitfree" = {
### pitfree
thr <- c(0,2,5,10,15)
edg <- c(0, 1.5)
chm <- rasterize_canopy(las, 1, pitfree(thr, edg), pkg = "raster")
},
"p2r" = {
### p2r
chm <- rasterize_canopy(las, 1, p2r(0.2), pkg = "raster")
},
"dsmtin" = {
### dsmtin
chm <- rasterize_canopy(las, 1, dsmtin(), pkg = "raster")
},
stop("Error: LAS Algorithm not selected!")
)
chm
kootenayCHM
las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las")
# Default algorithm for reading .las
#las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las", filter = "-keep_first -drop_z_below 5 -drop_z_above 40")
CHM <- rasterize_canopy(las, res=3.5, p2r(0.2), pkg = "raster")
plot(chm, col = col)
source("~/PROJECTS/golm_tree_analysis/src/analysis.Rmd")
# Default algorithm for reading .las
#las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las", filter = "-keep_first -drop_z_below 5 -drop_z_above 40")
CHM <- rasterize_canopy(las, res=3.5, p2r(0.2), pkg = "raster")
plot(CHM, col = col)
# Default algorithm for reading .las
las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las", filter = "-keep_first -drop_z_below 5 -drop_z_above 40")
CHM <- rasterize_canopy(las, res=3.5, p2r(0.2), pkg = "raster")
plot(CHM, col = col)
#las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las", filter = "-keep_first -drop_z_below 5 -drop_z_above 4)
source("~/PROJECTS/golm_tree_analysis/src/analysis.Rmd")
#sp_summarise(ttops)
# Attach the 'ForestTools' and 'raster' libraries
library(ForestTools)
library(raster)
library(lidR)
las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las", filter = "-keep_first -drop_z_below 5 -drop_z_above 40")
CHM <- rasterize_canopy(las, res=3.5, p2r(0.2), pkg = "raster")
plot(CHM, col = col)
las <- readLAS("/home/nibe/PROJECTS/golm_tree_analysis/data/Golm_May06_2018_Milan_UTM33N_WGS84_6digit_cl.las", filter = "-keep_first -drop_z_below 10 -drop_z_above 40")
CHM <- rasterize_canopy(las, res=3.5, p2r(0.2), pkg = "raster")
plot(CHM, col = col)
